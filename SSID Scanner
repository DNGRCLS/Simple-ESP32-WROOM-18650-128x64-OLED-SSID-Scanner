#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <WiFi.h>

// Constants for the OLED display
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C

// Create an instance of the OLED display
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

void setup() {
  // Start serial communication for debugging
  Serial.begin(115200);

  // Initialize the I2C bus with specific pins
  Wire.begin(5, 4);

  // Initialize the OLED display
  if (!display.begin(0x3C, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Infinite loop
  }

  display.clearDisplay(); // forgo the initial splash screen
  delay(2000); // Pause for 2 seconds

  // Clear the display buffer
  display.clearDisplay();

  // Display initial message
  display.setTextSize(1);      
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.print(F("Scanning WiFi..."));
  display.display();
}

void loop() {
  // Clear the display
  display.clearDisplay();

  // Start Wi-Fi scan
  int n = WiFi.scanNetworks();
  if (n == 0) {
    display.setCursor(0, 0);
    display.print(F("No networks found"));
  } else {
    display.setCursor(0, 0);
    display.print(F("Networks found: "));
    display.println(n);

    // Display SSIDs
    int y = 10; // Start Y position for SSIDs
    for (int i = 0; i < n; i++) {
      display.setCursor(0, y);
      display.print(WiFi.SSID(i));
      display.print(F(" ("));
      display.print(WiFi.RSSI(i));
      display.print(F("dBm)"));
      y += 10; // Move down for next SSID
      if (y > SCREEN_HEIGHT - 10) {
        // If too many SSIDs, stop displaying
        break;
      }
    }
  }

  // Update the display with new information
  display.display();

  // Delay before the next scan
  delay(5000); // Scan every 5 seconds
}
